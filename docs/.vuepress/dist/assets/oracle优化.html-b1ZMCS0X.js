import{_ as n,c as a,a as e,o as t}from"./app-DyLo7YyT.js";const p="/assets/1733482503649-C26aSzIW.png",l={};function o(c,s){return t(),a("div",null,s[0]||(s[0]=[e('<h1 id="基数" tabindex="-1"><a class="header-anchor" href="#基数"><span>基数</span></a></h1><p>基数（CARDINALITY）:某个列唯一建（Distinct keys）的数量叫作基数，基数的高低影响列的数据分布。</p><p>&lt;当某个列的数值查询结果是返回表中5%以内的数据时，应该走索引；否则走全表描&gt;</p><p><img src="'+p+`" alt="1733482503649"></p><p>可能存在基数小，存在大量的重复值，导致数据的分布极其不均匀，存在二者都有可能</p><p><code>Select 列，count(*) from 表 group by 列 order by 2 desc</code></p><p>可查看列的数据分布</p><p>选择性（SELECTIVITY）：基数与总行数的比值再乘以100%基数某列的选择性</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">Select</span> a<span class="token punctuation">.</span>column_name<span class="token punctuation">,</span>b<span class="token punctuation">.</span>num_rows<span class="token punctuation">,</span>a<span class="token punctuation">.</span>num_distinct Cardinality<span class="token punctuation">,</span><span class="token function">round</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>num_distinct <span class="token operator">/</span> b<span class="token punctuation">.</span>num_rows <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> selectivity<span class="token punctuation">,</span>a<span class="token punctuation">.</span>histogram<span class="token punctuation">,</span>a<span class="token punctuation">.</span>num_bucketsFrom dba_tab_col_statistics a<span class="token punctuation">,</span> dba_tables bWhere a<span class="token punctuation">.</span>owner <span class="token operator">=</span> b<span class="token punctuation">.</span>owner  <span class="token operator">and</span></span>
<span class="line">a<span class="token punctuation">.</span>table_name <span class="token operator">=</span> b<span class="token punctuation">.</span>table_nameAnd a<span class="token punctuation">.</span>owner <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token operator">And</span> a<span class="token punctuation">.</span>table_name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看表的选择性</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">procedure</span> gather_table_stats<span class="token punctuation">(</span></span>
<span class="line">ownname varchar2<span class="token punctuation">,</span> </span>
<span class="line">tabname varchar2<span class="token punctuation">,</span></span>
<span class="line">partname varchar2 <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span></span>
<span class="line">estimate_percent number <span class="token keyword">default</span> DEFAULT_ESTIMATE_PERCENT<span class="token punctuation">,</span></span>
<span class="line">block_sample <span class="token keyword">boolean</span> <span class="token keyword">default</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span></span>
<span class="line">method_opt varchar2 <span class="token keyword">default</span></span>
<span class="line">DEFAULT_METHOD_OPT<span class="token punctuation">,</span></span>
<span class="line">degree number <span class="token keyword">default</span> to_degree_type<span class="token punctuation">(</span>get_param<span class="token punctuation">(</span><span class="token string">&#39;DEGREE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   </span>
<span class="line">granularity varchar2 <span class="token keyword">default</span>  DEFAULT_GRANULARITY<span class="token punctuation">,</span>   </span>
<span class="line"><span class="token keyword">cascade</span> <span class="token keyword">boolean</span> <span class="token keyword">default</span> DEFAULT_CASCADE<span class="token punctuation">,</span>   </span>
<span class="line">stattab varchar2 <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span> </span>
<span class="line">statid varchar2 <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   </span>
<span class="line">statown varchar2 <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   </span>
<span class="line">no_invalidate <span class="token keyword">boolean</span> defaultto_no_invalidate_type<span class="token punctuation">(</span>get_param<span class="token punctuation">(</span><span class="token string">&#39;NO_INVALIDATE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   </span>
<span class="line">stattype varchar2 <span class="token keyword">default</span> <span class="token string">&#39;DATA&#39;</span><span class="token punctuation">,</span>   </span>
<span class="line"><span class="token keyword">force</span> <span class="token keyword">boolean</span> <span class="token keyword">default</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span>     <span class="token comment">-- the context is intended for internal</span></span>
<span class="line"><span class="token keyword">use</span> only<span class="token punctuation">.</span>context dbms_stats<span class="token punctuation">.</span>CContext <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>录入表信息自动优化，返回需要添加索引，且存在</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">begin</span>  </span>
<span class="line">dbms_stats<span class="token punctuation">.</span>flush_database_monitoring_info<span class="token punctuation">;</span>  </span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">/</span>  </span>
<span class="line"><span class="token keyword">select</span> owner<span class="token punctuation">,</span></span>
<span class="line">         column_name<span class="token punctuation">,</span></span>
<span class="line">         num_rows<span class="token punctuation">,</span></span>
<span class="line">         Cardinality<span class="token punctuation">,</span></span>
<span class="line">         selectivity<span class="token punctuation">,</span></span>
<span class="line">         <span class="token string">&#39;Need index&#39;</span> <span class="token keyword">as</span> notice</span>
<span class="line">    <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> b<span class="token punctuation">.</span>OWNER<span class="token punctuation">,</span></span>
<span class="line">                 a<span class="token punctuation">.</span>column_name<span class="token punctuation">,</span></span>
<span class="line">                 b<span class="token punctuation">.</span>NUM_ROWS<span class="token punctuation">,</span></span>
<span class="line">                 a<span class="token punctuation">.</span>num_distinct Cardinality<span class="token punctuation">,</span></span>
<span class="line">                 <span class="token function">round</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>num_distinct <span class="token operator">/</span>b<span class="token punctuation">.</span>NUM_ROWS <span class="token operator">*</span> <span class="token number">100</span> <span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> selectivity</span>
<span class="line">              <span class="token keyword">from</span> dba_tab_col_statistics a<span class="token punctuation">,</span>dba_tables b</span>
<span class="line">              <span class="token keyword">where</span> a<span class="token punctuation">.</span>owner <span class="token operator">=</span> b<span class="token punctuation">.</span>OWNER</span>
<span class="line">                <span class="token operator">and</span> a<span class="token punctuation">.</span>table_name <span class="token operator">=</span> b<span class="token punctuation">.</span>TABLE_NAME</span>
<span class="line">                <span class="token operator">and</span> a<span class="token punctuation">.</span>owner <span class="token operator">=</span> <span class="token string">&#39;h2&#39;</span></span>
<span class="line">                <span class="token operator">and</span> a<span class="token punctuation">.</span>table_name <span class="token operator">=</span><span class="token string">&#39;S_FUNCTION_BASE&#39;</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token keyword">where</span> selectivity <span class="token operator">&gt;=</span> <span class="token number">20</span></span>
<span class="line">     <span class="token operator">and</span> column_name <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> column_name</span>
<span class="line">                               <span class="token keyword">from</span> dba_ind_columns</span>
<span class="line">                              <span class="token keyword">where</span> table_owner <span class="token operator">=</span> <span class="token string">&#39;h2&#39;</span></span>
<span class="line">                                <span class="token operator">and</span> table_name <span class="token operator">=</span> <span class="token string">&#39;S_FUNCTION_BASE&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token operator">and</span> column_name <span class="token operator">in</span>  <span class="token punctuation">(</span><span class="token keyword">select</span> c<span class="token punctuation">.</span>name</span>
<span class="line">     <span class="token keyword">from</span> sys<span class="token punctuation">.</span>col_usage u<span class="token punctuation">,</span>sys<span class="token punctuation">.</span>obju<span class="token punctuation">,</span>sys<span class="token punctuation">.</span>obj o<span class="token punctuation">,</span> sys<span class="token punctuation">.</span>col$c<span class="token punctuation">,</span>sys<span class="token punctuation">.</span><span class="token keyword">user</span>$ r</span>
<span class="line">     <span class="token keyword">where</span> o<span class="token punctuation">.</span>obj<span class="token comment"># = u.obj#</span></span>
<span class="line">       <span class="token operator">and</span> c<span class="token punctuation">.</span>obj<span class="token comment"># = u.obj#</span></span>
<span class="line">       <span class="token operator">and</span> c<span class="token punctuation">.</span>col<span class="token comment"># = u.intcol#</span></span>
<span class="line">       <span class="token operator">and</span> r<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;H2&#39;</span></span>
<span class="line">    <span class="token operator">and</span> o<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;S_FUNCTION_BASE&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="统计信息" tabindex="-1"><a class="header-anchor" href="#统计信息"><span>统计信息</span></a></h1><h2 id="一、统计信息的收集" tabindex="-1"><a class="header-anchor" href="#一、统计信息的收集"><span>一、统计信息的收集</span></a></h2><p>Gather_stats_job 调用 dbms_stats.gather_database_stats_job_proc 过程来收集statistics的信息。该过程收集对象statistics 的条件如下：</p><p>（1）对象的统计信息之前没有收集过。</p><p>（2）当对象有超过10%的 rows 被修改，此时对象的统计信息也称为stale statistics。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> job_name<span class="token punctuation">,</span>program_name<span class="token punctuation">,</span>enabled<span class="token punctuation">,</span>stop_on_window_close <span class="token keyword">from</span> dba_scheduler_jobs <span class="token keyword">where</span> job_name <span class="token operator">=</span> <span class="token string">&#39;gather_stats_job&#39;</span><span class="token punctuation">;</span> </span>
<span class="line">job_name              program_name           enabl  stop_on_window_close </span>
<span class="line"><span class="token comment">-------------------- --------------------    ----- -------------------- </span></span>
<span class="line">gather_stats_job      gather_stats_prog      <span class="token boolean">true</span>    <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>停止自动统计信息的收集</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"> <span class="token keyword">BEGIN</span>  DBMS_SCHEDULER<span class="token punctuation">.</span><span class="token keyword">DISABLE</span><span class="token punctuation">(</span><span class="token string">&#39;GATHER_STATS_JOB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自动统计信息的收集参数可以查看DBA_TAB_STAT_PREFS，可以通过dbms_stats.set_XX_prefs设置</p><h2 id="二、如何查看统计信息是否过期" tabindex="-1"><a class="header-anchor" href="#二、如何查看统计信息是否过期"><span>二、如何查看统计信息是否过期</span></a></h2><p>查看表的数据变动情况请使用SQL语句：<code>select * from user_tab_modifications;</code></p><p>注意以及使用方法：</p><p>1、但这张表不是实时更新的，默认情况15分钟更新一次，所以你更新一张表，可能在 user_tab_modifications里不能立刻体现出来。</p><p>2、想要实时查看也有办法实现，那就是在执行select * from user_tab_modifications之前先执行</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">exec</span> DBMS_STATS<span class="token punctuation">.</span>FLUSH_DATABASE_MONITORING_INFO<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个存储过程目的就是立刻刷新异动信息的</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">EXEC</span> DBMS_STATS<span class="token punctuation">.</span>FLUSH_DATABASE_MONITORING_INFO<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> OWNER<span class="token punctuation">,</span>TABLE_NAME<span class="token punctuation">,</span>OBJECT_TYPE<span class="token punctuation">,</span>STALE_STATS<span class="token punctuation">,</span>LAST_ANALYZED FROMDBA_TAB_STATISTICS </span>
<span class="line">		<span class="token keyword">WHERE</span><span class="token punctuation">(</span>STALE_STATS<span class="token operator">=</span><span class="token string">&#39;YES&#39;</span> <span class="token operator">OR</span> LAST_ANALYZED <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、优化器收集的统计信息包括内容" tabindex="-1"><a class="header-anchor" href="#三、优化器收集的统计信息包括内容"><span>三、优化器收集的统计信息包括内容：</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">Table</span> <span class="token keyword">statistics</span>  Number <span class="token keyword">of</span> <span class="token keyword">rows</span>  Number <span class="token keyword">of</span> blocks  Average <span class="token keyword">row</span> length  </span>
<span class="line"><span class="token keyword">Column</span> <span class="token keyword">statistics</span>  Number <span class="token keyword">of</span> <span class="token keyword">distinct</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>NDV<span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token keyword">column</span>  Number <span class="token keyword">of</span> nulls <span class="token operator">in</span> <span class="token keyword">column</span>  <span class="token keyword">Data</span> distribution <span class="token punctuation">(</span>histogram<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">Index</span> <span class="token keyword">statistics</span>  Number <span class="token keyword">of</span> leaf blocks  Levels  Clustering factor  </span>
<span class="line">System <span class="token keyword">statistics</span>  I<span class="token operator">/</span>O performance <span class="token operator">and</span> utilization  CPU performance <span class="token operator">and</span> utilization</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>表的统计信息</li><li>包含表行数，使用的块数，空的块数，块的使用率，行迁移和链接的数量，pctfree，pctused 的数据，行的平均大小：</li><li>SELECT NUM_ROWS, --表中的记录数</li><li>BLOCKS, --表中数据所占的数据块数</li><li>EMPTY_BLOCKS, --表中的空块数</li><li>AVG_SPACE, --数据块中平均的使用空间</li><li>CHAIN_CNT, --表中行连接和行迁移的数量</li><li>AVG_ROW_LEN --每条记录的平均长度</li><li>FROM USER_TABLES</li><li>索引列的统计信息</li><li>包含 索引的深度（ B-Tree 的级别），索引叶级的块数量，集群因子（clustering_factor), 唯一值的个数。</li><li>SELECT BLEVEL, --索引的层数</li><li>LEAF_BLOCKS, --叶子结点的个数</li><li>DISTINCT_KEYS, --唯一值的个数</li><li>AVG_LEAF_BLOCKS_PER_KEY, --每个 KEY 的平均叶块个数</li><li>AVG_DATA_BLOCKS_PER_KEY, --每个 KEY 的平均数据块个数</li><li>CLUSTERING_FACTOR --群集因子</li><li>FROM USER_INDEXES</li><li>列的统计信息</li><li>包含 唯一的值个数，列最大小值， 密度（选择率），数据分布（直方图信息），NUll 值个数</li><li>SELECT NUM_DISTINCT, --唯一值的个数</li><li>LOW_VALUE, --列上的最小值</li><li>HIGH_VALUE, --列上的最大值</li><li>DENSITY, --选择率因子（密度）</li><li>NUM_NULLS, --空值的个数</li><li>NUM_BUCKETS, --直方图的 BUCKET 个数</li><li>HISTOGRAM --直方图的类型</li><li>FROM USER_TAB_COLUMNS</li></ol><h2 id="四、dbms-stats-gather-table-stats详解" tabindex="-1"><a class="header-anchor" href="#四、dbms-stats-gather-table-stats详解"><span>四、DBMS_STATS.GATHER_TABLE_STATS详解</span></a></h2><p>作用:</p><p>DBMS_STATS.GATHER_TABLE_STATS统计表,列,索引的统计信息（默认参数下是对表进行直方图信息收集，包含该表的自身-表的行数、数据块数、行长等信息；列的分析--列值的重复数、列上的空值、数据在列上的分布情况；索引的分析-索引页块的数量、索引的深度、索引聚合因子）.</p><p>DBMS_STATS.GATHER_TABLE_STATS的语法如下:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DBMS_STATS.GATHER_TABLE_STATS</span>
<span class="line"> (ownname VARCHAR2, tabname  VARCHAR2, partname VARCHAR2,estimate_percent</span>
<span class="line"> NUMBER,block_sample BOOLEAN,method_opt  VARCHAR2,degree  NUMBER,</span>
<span class="line"> granularity VARCHAR2, cascade  BOOLEAN,stattab VARCHAR2,statid VARCHAR2,statown</span>
<span class="line"> VARCHAR2,no_invalidate BOOLEAN, force BOOLEAN);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明:</p><p>ownname:要分析表的拥有者</p><p>tabname:要分析的表名.</p><p>partname:分区的名字,只对分区表或分区索引有用.</p><p>estimate_percent:采样行的百分比,取值范围[0.000001,100],null为全部分析,不采样. 常量:DBMS_STATS.AUTO_SAMPLE_SIZE是默认值,由oracle决定最佳取采样值.</p><p>block_sapmple:是否用块采样代替行采样.</p><p>method_opt:决定histograms信息是怎样被统计的.method_opt的取值如下(默认值为FOR ALL COLUMNS SIZE AUTO):</p><p>for all columns:统计所有列 的histograms.</p><p>for all indexed columns:统计所有indexed列的histograms.</p><p>for all hidden columns:统计你看不到列的histograms</p><p>for columns <code>&lt;list&gt;</code> SIZE <code>&lt;N&gt;</code> | REPEAT | AUTO | SKEWONLY:统计指定列的histograms.N的取值范围[1,254]; REPEAT上次统计过的histograms;AUTO由oracle决定N的大小;SKEWONLY 选项会耗费大量处理时间，因为它要检查每个索引中的每个列的值的分布情况。</p><p>degree:决定并行度.默认值为null.</p><p>granularity:Granularity of statistics to collect ,only pertinent if the table is partitioned.</p><p>cascade:是收集索引的信息.默认为FALSE.</p><p>stattab:指定要存储统计信息的表,statid如果多个表的统计信息存储在同一个stattab中用于进行区分.statown存储统计信息表的拥有者.以上三个参数若不指定,统计信息会直接更新到数据字典.</p><p>no_invalidate: Does not invalidate the dependent cursors if set to TRUE. The procedure invalidates the dependent cursors immediately if set to FALSE.</p><p>force:即使表锁住了也收集统计信息.</p><p>例子:</p><p>execute dbms_stats.gather_table_stats(ownname =&gt; &#39;owner&#39;,tabname =&gt; &#39;table_name&#39; ,estimate_percent =&gt; null ,method_opt =&gt; &#39;for all indexed columns&#39; ,cascade =&gt; true);</p><p>如何使用dbms_stats分析统计信息？</p><p>--创建统计信息历史保留表</p><p><code> sql&gt; exec dbms_stats.create_stat_table(ownname =&gt; &#39;scott&#39;,stattab =&gt; &#39;stat_t&#39;) ;</code></p><p>--导出整个scheme的统计信息</p><p><code> sql&gt; exec dbms_stats.export_schema_stats(ownname =&gt; &#39;scott&#39;,stattab =&gt; &#39;stat_t&#39;) ;</code></p><p>--分析scheme</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">Exec</span> dbms_stats<span class="token punctuation">.</span>gather_schema_stats<span class="token punctuation">(</span>   ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;scott&#39;</span><span class="token punctuation">,</span>  options <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;GATHER AUTO&#39;</span><span class="token punctuation">,</span>   estimate_percent <span class="token operator">=</span><span class="token operator">&gt;</span></span>
<span class="line"> dbms_stats<span class="token punctuation">.</span>auto_sample_size<span class="token punctuation">,</span>   method_opt <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;for all indexed columns &#39;</span><span class="token punctuation">,</span>   degree <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">6</span> <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>--分析表</p><p>sql&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">exec</span> dbms_stats<span class="token punctuation">.</span>gather_table_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;scott&#39;</span><span class="token punctuation">,</span>tabname <span class="token operator">=</span><span class="token operator">&gt;</span></span>
<span class="line"> <span class="token string">&#39;work_list&#39;</span><span class="token punctuation">,</span>estimate_percent <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span>method_opt<span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;for all indexed columns&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>--分析索引</p><p>SQL&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">exec</span> dbms_stats<span class="token punctuation">.</span>gather_index_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;crm2&#39;</span><span class="token punctuation">,</span>indname <span class="token operator">=</span><span class="token operator">&gt;</span></span>
<span class="line"> <span class="token string">&#39;IDX_ADM_PERMISSION_PID_MID&#39;</span><span class="token punctuation">,</span>estimate_percent <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span>degree <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>--如果发现执行计划走错，删除表的统计信息</p><p>SQL&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">dbms_stats<span class="token punctuation">.</span>delete_table_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;scott&#39;</span><span class="token punctuation">,</span>tabname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;work_list&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>--导入表的历史统计信息</p><p>sql&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">exec</span> dbms_stats<span class="token punctuation">.</span>import_table_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;scott&#39;</span><span class="token punctuation">,</span>tabname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;work_list&#39;</span><span class="token punctuation">,</span>stattab <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;stat_table&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>--如果进行分析后，大部分表的执行计划都走错，需要导回整个scheme的统计信息</p><p>sql&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">exec</span> dbms_stats<span class="token punctuation">.</span>import_schema_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;scott&#39;</span><span class="token punctuation">,</span>stattab <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;stat_table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>--导入索引的统计信息</p><p>SQL&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"> <span class="token keyword">exec</span> dbms_stats<span class="token punctuation">.</span>import_index_stats<span class="token punctuation">(</span>ownname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;crm2&#39;</span><span class="token punctuation">,</span>indname <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;IDX_ADM_PERMISSION_PID_MID&#39;</span><span class="token punctuation">,</span>stattab <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;stat_table&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>--检查是否导入成功</p><p>SQL&gt;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> table_name<span class="token punctuation">,</span>num_rows<span class="token punctuation">,</span>a<span class="token punctuation">.</span>blocks<span class="token punctuation">,</span>a<span class="token punctuation">.</span>last_analyzed <span class="token keyword">from</span> all_tables a <span class="token keyword">where</span> a<span class="token punctuation">.</span>table_name<span class="token operator">=</span><span class="token string">&#39;WORK_LIST&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>分析数据库（包括所有的用户对象和系统对象）：gather_database_stats</p><p>分析用户所有的对象（包括表、索引、簇）：gather_schema_stats</p><p>分析表：gather_table_stats</p><p>分析索引：gather_index_stats</p><p>删除数据库统计信息：delete_database_stats</p><p>删除用户方案统计信息：delete_schema_stats</p><p>删除表统计信息：delete_table_stats</p><p>删除索引统计信息：delete_index_stats</p><p>删除列统计信息：delete_column_stats</p><p>设置表统计信息：set_table_stats</p><p>设置索引统计信息：set_index_stats</p><p>设置列统计信息：set_column_stats</p><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h4><p>这是对命令与工具包的一些总结</p><p>1、对于分区表，建议使用DBMS_STATS，而不是使用Analyze语句。</p><p>a) 可以并行进行，对多个用户，多个Table</p><p>b) 可以得到整个分区表的数据和单个分区的数据。</p><p>c) 可以在不同级别上Compute Statistics：单个分区，子分区，全表，所有分区</p><p>d) 可以倒出统计信息</p><p>e) 可以用户自动收集统计信息</p><p>2、DBMS_STATS的缺点</p><p>a) 不能Validate Structure</p><p>b) 不能收集CHAINED ROWS, 不能收集CLUSTER TABLE的信息，这两个仍旧需要使用Analyze语句。</p><p>c) DBMS_STATS 默认不对索引进行Analyze，因为默认Cascade是False，需要手工指定为True</p><p>3、对于oracle 9里面的External Table，Analyze不能使用，只能使用DBMS_STATS来收集信息。</p><h1 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h1>`,111)]))}const r=n(l,[["render",o],["__file","oracle优化.html.vue"]]),u=JSON.parse('{"path":"/md/db/oracle%E4%BC%98%E5%8C%96.html","title":"基数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、统计信息的收集","slug":"一、统计信息的收集","link":"#一、统计信息的收集","children":[]},{"level":2,"title":"二、如何查看统计信息是否过期","slug":"二、如何查看统计信息是否过期","link":"#二、如何查看统计信息是否过期","children":[]},{"level":2,"title":"三、优化器收集的统计信息包括内容：","slug":"三、优化器收集的统计信息包括内容","link":"#三、优化器收集的统计信息包括内容","children":[]},{"level":2,"title":"四、DBMS_STATS.GATHER_TABLE_STATS详解","slug":"四、dbms-stats-gather-table-stats详解","link":"#四、dbms-stats-gather-table-stats详解","children":[]}],"git":{},"filePathRelative":"md/db/oracle优化.md"}');export{r as comp,u as data};
