import{_ as s,c as e,a as n,o as t}from"./app-DyLo7YyT.js";const l="/assets/image-BALknSWZ.png",i={};function c(p,a){return t(),e("div",null,a[0]||(a[0]=[n('<h1 id="服务管理" tabindex="-1"><a class="header-anchor" href="#服务管理"><span>服务管理</span></a></h1><h2 id="服务的结构" tabindex="-1"><a class="header-anchor" href="#服务的结构"><span>服务的结构</span></a></h2><p><img src="'+l+`" alt="alt text"></p><p>查询已安装的服务 RPM包安装的服务</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">chkconfig</span> <span class="token parameter variable">--list</span></span>
<span class="line"><span class="token comment">#查看服务自启动状态，可以看到所有RPM包安装的服务</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>源码包安装的服务 查看服务安装位置，一般是/usr/local/下 RPM安装服务和源码包安装服务的区别就是安装位置的不同 源码包安装在指定位置，一般是/usr/local/ RPM包安装在默认位置中</p><h3 id="独立服务" tabindex="-1"><a class="header-anchor" href="#独立服务"><span>独立服务</span></a></h3><p>启动</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/etc/init.d/<span class="token punctuation">[</span>绝对路径<span class="token punctuation">]</span>独立服务名  startistop<span class="token operator">|</span>statuslrestart<span class="token operator">|</span></span>
<span class="line"><span class="token function">service</span>  独立服务名 start<span class="token operator">|</span>stoplrestart<span class="token operator">|</span>status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>自启动 <code>chkconfig [--level 运行级别] [独立服务名] [on|off]</code> 修改<code>/etc/rc.d/rc.local</code>文件 使用ntsysv命令管理自启动[red hat]</p><h3 id="基于xinetd服务" tabindex="-1"><a class="header-anchor" href="#基于xinetd服务"><span>基于xinetd服务</span></a></h3><p>1、安装xinetd与telnet</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># yum  -y  install xinetd</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>root@localhost ~ <span class="token punctuation">]</span><span class="token comment"># yum -y install telnet -server</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源码包管理" tabindex="-1"><a class="header-anchor" href="#源码包管理"><span>源码包管理</span></a></h2><p>1、源码包安装服务的启动， 使用绝对路径，调用启动脚本来启动。不同的源码包的启动脚本不同。可以查看源码包的安装说明，查看启动脚本的方法。 <code>/usr/local/apache2/bin/apachectl startlstop</code></p><p>2、源码包服务的自启动 <code>[root@localhost ~]# vi /etc/rc.d/rc.local</code> 加入 <code>/usr/local/ apache2/bin/apachectl start</code></p><p>3、让源码包服务被服务管理命令识别 让源码包的apache服务能被service命令管理启动 <code>In -s /usr/local/apache2/bin/apachectl /etc/init.d/apache</code></p>`,17)]))}const o=s(i,[["render",c],["__file","服务管理.html.vue"]]),d=JSON.parse('{"path":"/md/linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86.html","title":"服务管理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"服务的结构","slug":"服务的结构","link":"#服务的结构","children":[{"level":3,"title":"独立服务","slug":"独立服务","link":"#独立服务","children":[]},{"level":3,"title":"基于xinetd服务","slug":"基于xinetd服务","link":"#基于xinetd服务","children":[]}]},{"level":2,"title":"源码包管理","slug":"源码包管理","link":"#源码包管理","children":[]}],"git":{},"filePathRelative":"md/linux/服务管理.md"}');export{o as comp,d as data};
