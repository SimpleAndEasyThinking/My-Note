import{_ as s,c as a,a as p,o as e}from"./app-DyLo7YyT.js";const t="/assets/custom-image-1-zBYuhiQs.png",l={};function c(o,n){return e(),a("div",null,n[0]||(n[0]=[p('<h1 id="负载均衡器" tabindex="-1"><a class="header-anchor" href="#负载均衡器"><span>负载均衡器</span></a></h1><p>Spring Cloud 中定义了 <strong>LoadBalancerClient</strong> 作为负载均衡器的通用接口并且针对 Ribbon 实现了<strong>RibbonLoadBalancerClient</strong>，但是它在具体实现客户端负载均衡时，是通过 Ribbon 的 ILoadBalancer 接口实现的。</p><h2 id="iloadbalancer接口" tabindex="-1"><a class="header-anchor" href="#iloadbalancer接口"><span>ILoadBalancer接口</span></a></h2><p><img src="'+t+`" alt="alt text"></p><h3 id="abstractloadbalancer抽象类" tabindex="-1"><a class="header-anchor" href="#abstractloadbalancer抽象类"><span>AbstractLoadBalancer抽象类</span></a></h3><p>AbstractLoadBalancer是ILoadBalancer接口的抽象实现。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractLoadBalancer</span> <span class="token keyword">implements</span> <span class="token class-name">ILoadBalancer</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ServerGroup</span><span class="token punctuation">{</span></span>
<span class="line"> <span class="token constant">ALL</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token constant">STATUS_UP</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token constant">STATUS_NOT_UP</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"><span class="token doc-comment comment">/** </span>
<span class="line">* ALL：所有服务实例。</span>
<span class="line">* STATUS_UP：正常服务的实例。</span>
<span class="line">* STATUS_NOT_UP：停止服务的实例。</span>
<span class="line">**/</span></span>
<span class="line"> <span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">chooseServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"> <span class="token keyword">return</span> <span class="token function">chooseServer</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"> <span class="token comment">//chooseServer()函数通过接口chooseServer(Object key)实现，key为null，表示在选择具体服务实例时忽略key的条件判断</span></span>
<span class="line"> <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> getServerList <span class="token punctuation">(</span><span class="token class-name">ServerGroup</span> serverGroup<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token comment">//定义了根据分组类型来获取不同的服务实例的列表。</span></span>
<span class="line"> <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">LoadBalancerStats</span> <span class="token function">getLoadBalancerStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token comment">//获取LoadBalancerStats对象,用来存储负载均衡器中各个服务实例当前的属性和统计信息。</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baseloadbalancer类" tabindex="-1"><a class="header-anchor" href="#baseloadbalancer类"><span>BaseLoadBalancer类</span></a></h3><p>BaseLoadBalancer类是Ribbon负载均衡器的基础实现类，在该类中定义了很多关于负载均衡器相关的基础内容</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">protected</span> <span class="token class-name">IPing</span> ping <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//检查服务实例是否正常服务的IPing对象,需要在构造时注入它的具体实现</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Monitor</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token constant">PREFIX</span> <span class="token operator">+</span> <span class="token string">&quot;AllServerList&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">DataSourceType</span><span class="token punctuation">.</span><span class="token constant">INFORMATIONAL</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">protected</span> <span class="token keyword">volatile</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> allServerList <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//用于存储所有服务实例的清单</span></span>
<span class="line"><span class="token annotation punctuation">@Monitor</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token constant">PREFIX</span> <span class="token operator">+</span> <span class="token string">&quot;UpServerList&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">DataSourceType</span><span class="token punctuation">.</span><span class="token constant">INFORMATIONAL</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">protected</span> <span class="token keyword">volatile</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> upServerList <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//用于存储正常服务的实例清单</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">protected</span> <span class="token class-name">LoadBalancerStats</span> lbStats<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//存储负载均衡器各服务实例属性和统计信息的 LoadBalanceStatus</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> <span class="token function">getReachableServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span>upServerList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span>allServerList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">SerialPingStrategy</span> <span class="token constant">DEFAULT_PING_STRATEGY</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SerialPingStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">IRule</span> <span class="token constant">DEFAULT_RULE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RoundRobinRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line"><span class="token comment">//默认初始化了RoundRobinRule为IRule的实现对象。 RoundRobinRule 实现了最基本且常用的线性负载均衡规则。</span></span>
<span class="line"><span class="token keyword">protected</span> <span class="token class-name">IRule</span> rule <span class="token operator">=</span> <span class="token constant">DEFAULT_RULE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">protected</span> <span class="token class-name">IPingStrategy</span> pingStrategy <span class="token operator">=</span> <span class="token constant">DEFAULT_PING_STRATEGY</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//检查服务实例操作的执行策略对象 IPingStrategy</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SerialPingStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">IPingStrategy</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">//该策略采用线性遍历ping 服务实例的方式实现检查</span></span>
<span class="line"><span class="token comment">//该策略在当IPing的实现速度不理想，或是Server列表过大时，可能会影响系统性能，</span></span>
<span class="line"><span class="token comment">//这时候需要通过实现IPingStrategy 接口并重写 pingServers（IPing ping,Server[]servers）函数去扩展ping的执行策略</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">pingServers</span><span class="token punctuation">(</span><span class="token class-name">IPing</span> ping<span class="token punctuation">,</span> <span class="token class-name">Server</span><span class="token punctuation">[</span><span class="token punctuation">]</span> servers<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> numCandidates <span class="token operator">=</span> servers<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>numCandidates<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;LoadBalancer:  PingTask executing [{}] servers configured&quot;</span><span class="token punctuation">,</span> numCandidates<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numCandidates<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        results<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">/* Default answer is DEAD. */</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>ping <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                results<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ping<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span>servers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Exception while pinging Server: &#39;{}&#39;&quot;</span><span class="token punctuation">,</span> servers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> results<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>负载均衡的处理规则 IRule 对象，从 BaseLoadBalancer 中 chooseServer（Object key）的实现源码</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">chooseServer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>counter<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    counter<span class="token operator">=</span><span class="token function">createCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>rule<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">//负载均衡器实际将服务实例选择任务委托给了 IRule 实例中的 choose 函数来实现。</span></span>
<span class="line">      <span class="token keyword">return</span> rule<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在BaseLoadBalancer的构造函数种，还会启动一个用于检查Server是否健康的定时任务，该任务默认执行时间间隔为10秒</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">BaseLoadBalancer</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">IRule</span> rule<span class="token punctuation">,</span> <span class="token class-name">LoadBalancerStats</span> stats<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">IPing</span> ping<span class="token punctuation">,</span> <span class="token class-name">IPingStrategy</span> pingStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;LoadBalancer [{}]:  initialized&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>ping <span class="token operator">=</span> ping<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>pingStrategy <span class="token operator">=</span> pingStrategy<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setRule</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setupPingTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    lbStats <span class="token operator">=</span> stats<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setupPingTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canSkipPing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>lbTimer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        lbTimer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    lbTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ShutdownEnabledTimer</span><span class="token punctuation">(</span><span class="token string">&quot;NFLoadBalancer-PingTimer-&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    lbTimer<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PingTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pingIntervalSeconds <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">forceQuickPing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加Serve</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addServers</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> newServers<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>newServers <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> newServers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> newList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        newList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>allServerList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        newList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>newServers<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">setServersList</span><span class="token punctuation">(</span>newList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;LoadBalancer [{}]: Exception while adding Servers&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>标记某个服务实例暂停服务</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">markServerDown</span><span class="token punctuation">(</span><span class="token class-name">Server</span> server<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>server <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>server<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;LoadBalancer [{}]:  markServerDown called on [{}]&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> server<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    server<span class="token punctuation">.</span><span class="token function">setAlive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// forceQuickPing();</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">notifyServerStatusChangeListener</span><span class="token punctuation">(</span><span class="token function">singleton</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dynamicserverlistloadbalancer类" tabindex="-1"><a class="header-anchor" href="#dynamicserverlistloadbalancer类"><span>DynamicServerListLoadBalancer类</span></a></h3><p>DynamicServerListLoadBalancer继承于<strong>BaseLoadBalancer</strong>类，它是对于基础负载均衡器的扩展，实现了服务实例清单在运行期的动态更新能力；同时，它还具备了对服务实例清单的过滤功能。</p><p>DynamicServerListLoadBalancer 对于基础负载均衡器BaseLoadBalancer多了三个内容：ServerList、ServerListFilter、ServerListUpdater</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">volatile</span> <span class="token class-name">ServerList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> serverListImpl<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">volatile</span> <span class="token class-name">ServerListFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> filter<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">ServerListUpdater<span class="token punctuation">.</span>UpdateAction</span> updateAction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerListUpdater<span class="token punctuation">.</span>UpdateAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">updateListOfServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">protected</span> <span class="token keyword">volatile</span> <span class="token class-name">ServerListUpdater</span> serverListUpdater<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">DynamicServerListLoadBalancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>待续</p>`,23)]))}const u=s(l,[["render",c],["__file","Spring_Cloud_Ribbon源码.html.vue"]]),r=JSON.parse('{"path":"/md/framework/spring/SpringCloud/Spring_Cloud_Ribbon%E6%BA%90%E7%A0%81.html","title":"负载均衡器","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ILoadBalancer接口","slug":"iloadbalancer接口","link":"#iloadbalancer接口","children":[{"level":3,"title":"AbstractLoadBalancer抽象类","slug":"abstractloadbalancer抽象类","link":"#abstractloadbalancer抽象类","children":[]},{"level":3,"title":"BaseLoadBalancer类","slug":"baseloadbalancer类","link":"#baseloadbalancer类","children":[]},{"level":3,"title":"DynamicServerListLoadBalancer类","slug":"dynamicserverlistloadbalancer类","link":"#dynamicserverlistloadbalancer类","children":[]}]}],"git":{},"filePathRelative":"md/framework/spring/SpringCloud/Spring_Cloud_Ribbon源码.md"}');export{u as comp,r as data};
